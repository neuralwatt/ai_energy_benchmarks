services:

  ollama:
    image: ollama/ollama
    container_name: ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu] 
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"

  curl_command:
    image: curlimages/curl:latest
    environment:
      - AI_MODEL=${AI_MODEL:-llama3.2}
    command: >
      curl -s -X POST http://ollama:11434/api/pull -d '{
        "model": "${AI_MODEL}"
      }'

  ai_energy_benchmarks:
    image: ghcr.io/neuralwatt/ai_energy_benchmarks:latest
    build:
      context: .
    volumes:
      - ./benchmark_output:/app/benchmark_output
    depends_on:
      curl_command:
        condition: service_completed_successfully
    environment:
      - GPU_MODEL=${GPU_MODEL:-h100}
      - AI_MODEL=${AI_MODEL:-llama3.2}
      - TEST_TIME=${TEST_TIME:-240}
      - LIMITING_MODE=${LIMITING_MODE:-none}
      - PRINT_RESPONSES=${PRINT_RESPONSES:-false}
      - DEBUG=${DEBUG:-false}
      - OUTPUT_DIR=${OUTPUT_DIR:-benchmark_output}
      - IN_DOCKER=${IN_DOCKER:-true}
      - NO_FIXED_OUTPUT=${NO_FIXED_OUTPUT:-false}
      - DEMO_MODE=${DEMO_MODE:-}
      - LOG_PROMPTS=${LOG_PROMPTS:-false}
      - LOG_FILE=${LOG_FILE:-prompts_and_responses.log}
      - WARMUP=${WARMUP:-false}
    command: >
      bash -c "python generate_inference_load.py 
      --gpu-model $${GPU_MODEL} 
      --ai-model $${AI_MODEL} 
      --test-time $${TEST_TIME} 
      --limiting-mode $${LIMITING_MODE} 
      --output-dir $${OUTPUT_DIR} 
      --in-docker 
      $${PRINT_RESPONSES:+--print-responses} 
      $${DEBUG:+--debug} 
      $${NO_FIXED_OUTPUT:+--no-fixed-output} 
      $${DEMO_MODE:+--demo-mode $${DEMO_MODE}} 
      $${LOG_PROMPTS:+--log-file $${OUTPUT_DIR}/$${LOG_FILE}}
      $${WARMUP:+--warmup}"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu] 

volumes:
  ollama: